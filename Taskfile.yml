version: '3'

dotenv: ['.env', '.env.local']

includes:
  tools:
    taskfile: ./tools.Taskfile.yml
  bindings/go/descriptor:
    optional: true
    taskfile: ./bindings/go/descriptor/Taskfile.yml
    dir: ./bindings/go/descriptor
  bindings/go/runtime:
    optional: true
    taskfile: ./bindings/go/runtime/Taskfile.yml
    dir: ./bindings/go/runtime
  bindings/go/generator:
    optional: true
    taskfile: ./bindings/go/generator/Taskfile.yml
    dir: ./bindings/go/generator
  bindings/go/blob:
    optional: true
    taskfile: ./bindings/go/blob/Taskfile.yml
    dir: ./bindings/go/blob

vars:
  GO_MODULES:
    sh: find {{ .ROOT_DIR }}/bindings/go -name go.mod -exec dirname {} \; | sed 's|{{ .ROOT_DIR }}/bindings/go/||'

tasks:
  test:
    desc: "Run all tests in the project"
    cmds:
      - for: { var: GO_MODULES }
        task: bindings/go/{{.ITEM}}:test

  init/go.work:
    desc: "Initialize the workspace environment"
    status:
      - find go.work
    cmds:
      - go work init
      - for: { var: GO_MODULES }
        cmd: 'go work use bindings/go/{{.ITEM}}'
      - go work sync

  generate:
    desc: "Run all Code Generators in the project"
    cmds:
      - task: 'bindings/go/generator:ocmtypegen/generate'
      - task: 'tools:controller-gen/generate-deepcopy'