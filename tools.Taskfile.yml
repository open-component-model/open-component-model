version: '3'

vars:
  DEEPCOPY_GEN_TARGET_VERSION: '${DEEPCOPY_GEN_VERSION}'
  GOLANGCI_LINT_TARGET_VERSION: '${GOLANGCI_LINT_VERSION}'

tasks:
  deepcopy-gen/generate-deepcopy:
    desc: "Generate kubernetes-style deepcopy code for all types in the project"
    deps: [deepcopy-gen/install]
    cmds:
      - for: { var: GO_MODULES }
        cmd: |
          cd {{.ITEM}} && \
          {{ .ROOT_DIR }}/tmp/bin/deepcopy-gen-{{ .DEEPCOPY_GEN_TARGET_VERSION }} \
          --output-file "zz_generated.deepcopy.go" \
          ./...

  deepcopy-gen/install:
    desc: "Install {{.PKG}} at {{ .DEEPCOPY_GEN_TARGET_VERSION }} into tmp ({{ .ROOT_DIR }}/tmp/bin) if not already present"
    vars:
      PKG: k8s.io/code-generator/cmd/deepcopy-gen
    status:
      - '{{ .ROOT_DIR }}/tmp/bin/deepcopy-gen-{{ .DEEPCOPY_GEN_TARGET_VERSION }}'
    env:
      GOBIN: '{{ .ROOT_DIR }}/tmp/bin'
    cmds:
      - go install {{ .PKG }}@{{ .DEEPCOPY_GEN_TARGET_VERSION }}
      - mv {{ .ROOT_DIR }}/tmp/bin/deepcopy-gen {{ .ROOT_DIR }}/tmp/bin/deepcopy-gen-{{ .DEEPCOPY_GEN_TARGET_VERSION }}


  golangci-lint/run:
    desc: "Run golangci-lint on all go modules"
    deps: [golangci-lint/install]
    cmds:
      - task: golangci-lint/run-concurrent
    aliases:
      - "lint"

  golangci-lint/run-concurrent:
    desc: "Run golangci-lint on all modules concurrently after install"
    internal: true
    deps: 
      - for: { var: GO_MODULES }
        task: 'golangci-lint/module'
        vars:
          ITEM: '{{ .ITEM }}'
      - task: 'golangci-lint/module'
        vars:
          ITEM: 'cli'

  golangci-lint/module:
    desc: "Run golangci-lint on a single go module specified by ITEM"
    internal: true
    cmd: |
      cd {{.ITEM}} && 
        {{ .ROOT_DIR }}/tmp/bin/golangci-lint run \
          --timeout 10m \
          --config={{ .ROOT_DIR }}/.github/config/golangci.yml \
          --path-prefix {{.ITEM}} \
          {{ .CLI_ARGS }} ./...   
  
  

  golangci-lint/install:
    desc: "Install golangci-lint at {{ .GOLANGCI_LINT_TARGET_VERSION }} into tmp ({{ .ROOT_DIR }}/tmp/bin) if not already present"
    vars:
      CURRENT_VERSION:
        sh: '{{ .ROOT_DIR }}/tmp/bin/golangci-lint version --short || echo "0.0.0"'
    status:
      - '{{ contains .GOLANGCI_LINT_TARGET_VERSION .CURRENT_VERSION }}'
    cmds:
      - curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/refs/tags/v{{ .GOLANGCI_LINT_TARGET_VERSION }}/install.sh | sh -s -- -b {{ .ROOT_DIR }}/tmp/bin v{{ .GOLANGCI_LINT_TARGET_VERSION }}